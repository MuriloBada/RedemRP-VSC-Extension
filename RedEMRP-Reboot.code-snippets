{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"": {
		"scope": "lua",
		"prefix": "",
		"body": [
			"",
			"",
		],
		"description": ""
	},

	"RedEM Object server/client": {
		"scope": "lua",
		"prefix": "RedEM",
		"body": [
			"RedEM = exports['redem_roleplay']:RedEM()",
			"",
		],
		"description": "Get the RedEM var so you can access the core functions"
	},

	"Inventory var server": {
		"scope": "lua",
		"prefix": "inventory",
		"body": [
			"local data = {}",
			"TriggerEvent('redemrp_inventory:getData', function(call)",
			"    data = call",
			"",
			"end)",
			""
		],
		"description": "Creates the inventory variable so you can access the inventory functions"
	},

	"Get Item Data server": {
		"scope": "lua",
		"prefix": "Get Item Data",
		"body": [
			"local ${1:var name} = ${2:inventory var}.getItem(${3:source}, ${4:item Name})"
		],
		"description": "Get the data of a item into a variable"
	},

	"If Item Amount server": {
		"scope": "lua",
		"prefix": "If Item Amount",
		"body": [
			"if ${1:Inventory Var}.ItemAmount ${2:comparator} then",
			"    $3",
			"end"
		],
		"description": "If the current item has certain quantity"
	},

	"Item Amount server": {
		"scope": "lua",
		"prefix": "Item Amount",
		"body": [
			"${1:Inventory Var}.ItemAmount"
		],
		"description": "Quantity of the current item"
	},

	"Remove Item server": {
		"scope": "lua",
		"prefix": "Remove Item",
		"body": [
			"${1:Inventory Var}.RemoveItem(${2:quantity})"
		],
		"description": "Remove certain quantity from a inventory item"
	},

	"Add Item server": {
		"scope": "lua",
		"prefix": "Add Item",
		"body": [
			"${1:Inventory Var}.AddItem(${2:quantity})"
		],
		"description": "Add certain quantity from a inventory item"
	},

	"Change Item Meta server": {
		"scope": "lua",
		"prefix": "ChangeMeta",
		"body": [
			"${1:item var}ChangeMeta(${2:table})"
		],
		"description": "Changes the metadata of an item"
	},

	"playerLoaded server": {
		"scope": "lua",
		"prefix": "playerLoaded",
		"body": [
			"AddEventHandler('redemrp:playerLoaded', function(source)",
			"    ${1:logic}",
			"end)"
		],
		"description": "Insert the event handler for when the player loads"
	},

	"Player Object server": {
		"scope": "lua",
		"prefix": "Player Obj",
		"body": [
			"local ${1:varName} = RedEM.GetPlayer(${2:source})",
			"",
			"if ${1:varName} then",
			"    $3",
			"end"
		],
		"description": "Get Player table from a specific source"
	},

	"Add Money server": {
		"scope": "lua",
		"prefix": "Add Money",
		"body": [
			"${1:player variable}.AddMoney(${2:quantity})"
		],
		"description": "Adds money to a player"
	},

	"Remove Money server": {
		"scope": "lua",
		"prefix": "Remove Money",
		"body": [
			"${1:player variable}.RemoveMoney(${2:quantity})"
		],
		"description": "Remove money from a player"
	},

	"Player MetaData server": {
		"scope": "lua",
		"prefix": "Player MetaData",
		"body": [
			"${1:player variable}.SetMeta(${2:index}, ${3:table})"
		],
		"description": "Add a value"
	},


}